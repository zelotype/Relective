/*!
 * vue-gapi v0.0.10
 * (c) 2018 CedricPoilly
 * Released under the MIT License.
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.VueGapi=e.VueGapi||{})}(this,function(e){"use strict";var i,n=(i="https://apis.google.com/js/api.js",new Promise(function(t,e){var o=document.createElement("script");o.src=i,o.onreadystatechange=o.onload=function(){var e=setInterval(function(){o.readyState&&!/loaded|complete/.test(o.readyState)||(clearInterval(e),console.log("gapi.js loaded."),t())},100)},document.getElementsByTagName("head")[0].appendChild(o)})),t=function(){this.authenticated=this.isAuthenticated(),this.authInstance=null,this.login=this.login.bind(this),this.refreshToken=this.refreshToken.bind(this),this.setSession=this.setSession.bind(this),this.logout=this.logout.bind(this),this.isAuthenticated=this.isAuthenticated.bind(this)};t.prototype._expiresAt=function(e){return JSON.stringify(1e3*e.expires_in+(new Date).getTime())},t.prototype._setStorage=function(e,t){void 0===t&&(t=null),localStorage.setItem("gapi.access_token",e.access_token),localStorage.setItem("gapi.id_token",e.id_token),localStorage.setItem("gapi.expires_at",this._expiresAt(e)),t&&(localStorage.setItem("gapi.id",t.getId()),localStorage.setItem("gapi.full_name",t.getName()),localStorage.setItem("gapi.first_name",t.getGivenName()),localStorage.setItem("gapi.last_name",t.getFamilyName()),localStorage.setItem("gapi.image_url",t.getImageUrl()),localStorage.setItem("gapi.email",t.getEmail()))},t.prototype._clearStorage=function(){localStorage.removeItem("gapi.access_token"),localStorage.removeItem("gapi.id_token"),localStorage.removeItem("gapi.expires_at"),localStorage.removeItem("gapi.id"),localStorage.removeItem("gapi.full_name"),localStorage.removeItem("gapi.first_name"),localStorage.removeItem("gapi.last_name"),localStorage.removeItem("gapi.image_url"),localStorage.removeItem("gapi.email")},t.prototype.login=function(e){return this.authInstance.signIn().then(this.setSession)},t.prototype.refreshToken=function(e){var t=this;this.authInstance.currentUser.get().reloadAuthResponse().then(function(e){t._setStorage(e)})},t.prototype.logout=function(e){this.authInstance.signOut(function(e){return console.log(e)}),this._clearStorage(),this.authenticated=!1},t.prototype.setSession=function(e){var t=this.authInstance.currentUser.get().getBasicProfile(),o=e.Zi;this._setStorage(o,t),this.authenticated=!0},t.prototype.isAuthenticated=function(){var e=JSON.parse(localStorage.getItem("gapi.expires_at"));return(new Date).getTime()<e},t.prototype.getUserData=function(){return{firstName:localStorage.getItem("gapi.first_name"),lastName:localStorage.getItem("gapi.last_name"),email:localStorage.getItem("gapi.email")}};var r=new t,o=r.login,s=r.logout,l=r.isAuthenticated,g=r.getUserData,c=r.refreshToken,a={install:function(i,a){i.gapiLoadClientPromise=null;i.prototype.$getGapiClient=function(){return new Promise(function(e,t){var o;i.gapiLoadClientPromise&&0===i.gapiLoadClientPromise.status?e(i.gapiLoadClientPromise):(o=e,n.then(function(e){var t=window.gapi;t?t.auth?o(t):t.load("client:auth2",function(){i.gapiLoadClientPromise=t.client.init(a).then(function(){console.info("gapi client initialised."),r.authInstance=t.auth2.getAuthInstance(),o(t)})}):console.error("Failed to load GAPI!")}))})},i.prototype.$login=function(){return i.prototype.$getGapiClient().then(o)},i.prototype.$refreshToken=function(){return i.prototype.$getGapiClient().then(c)},i.prototype.$logout=function(){return i.prototype.$getGapiClient().then(s)},i.prototype.$isAuthenticated=l,i.prototype.$getUserData=g}};function p(e,t){e.use(a,t)}"undefined"!=typeof window&&window.Vue&&window.Vue.use(p);e.default=p,e.version="0.0.10",Object.defineProperty(e,"__esModule",{value:!0})});